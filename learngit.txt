// 创建一个版本库
$ mkdir learngit
// 进入某个版本库
$ cd learngit
// 显示当前目录
$ pwd
//将目录变成git管理的仓库
$ git init
// 添加一个文件到仓库
$ git add learngit.txt
// 提交文件(可以一次提交多个文件) -m 参数后面输入的是本次提交的说明
$ git commit -m "add 3 files."
// 命令可以让我们时刻掌握仓库当前的状态, 要随时掌握工作区的状态，使用git status命令。
$ git status
// 顾名思义就是查看difference，显示的格式正是Unix通用的diff格式, 如果git status告诉你有文件被修改过，用git diff可以查看修改内容。
$ git diff learngit.txt 
// 命令显示从最近到最远的提交日志，如果嫌输出信息太多，看得眼花缭乱的，可以试试加上--pretty=oneline参数
$ git log
// Git必须知道当前版本是哪个版本，在Git中，用HEAD表示当前版本，也就是最新的提交1094adb...（注意我的提交ID和你的肯定不一样），上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100
$ git reset --hard HEAD^
$ git reset --hard 1094a(版本号, 可以只写前几位)
// 用来记录你的每一次命令 (当你用$ git reset --hard HEAD^回退到add distributed版本时，再想恢复到append GPL，就必须找到append GPL的commit id)
$ git reflog